#!/bin/env rc
# Package system.

if(test -z $PARENT)
	PARENT = ''

if(test -z $DISTRO)
	DISTRO = ''
SYS_NAME = `{uname}^$DISTRO

pkg_install = `{
	 pp $HOME/app/pkg/installers.tsv | grep '^'^$SYS_NAME^'	' \
		| cut -f2
}

if(test -z $"pkg_install){
	echo $0: could not guess your distro/os out >[1=2]
	exit 1
}

PKG_DIR = $HOME/dev
pwd = `{pwd}

fn usage {
	echo usage: $0 '<command>' [options] [packages]>[1=2]
	exit 1
}


fn get_handler {
	for(pkg in $pkgs){
		bn = `{basename $pkg}
		if(test -d $PKG_DIR/$bn){
			cd $PKG_DIR/$bn
			git pull
		}
		if not {
			cd $PKG_DIR
			git clone $pkg
		}
		cd $"pwd
	}
}

fn install_handler {
	for(pkg in $pkgs){
		if(! ~ $pkg $INSTALLED_PACKAGES){
			bn = `{basename $"pkg}
			
			echo
			echo '<===' $pkg
			if(test -d $PKG_DIR/$bn){
				cd $PKG_DIR/$bn
				git pull || exit 1
			}
			if not {
				cd $PKG_DIR/ \
				&& git clone $pkg || exit 1
				cd $PKG_DIR/$bn
			}

			# First OS dependencies.
			if(test -r dep/os){
				$pkg_install `{pkgname `{pp dep/os}}
			}

			# Then git deps.
			if(test -r dep/git){
				PREV_PARENT = $PARENT
				PARENT = $pkg
				pkg install `{pp dep/git}
				INSTALLED_PACKAGES = ($INSTALLED_PACKAGES `{pp dep/git})
				PARENT = $PREV_PARENT
			}

			# Package itself.
			echo
			echo $pkg '===>' $PARENT
			if(test -r ./install){
				./install
			}
			if not {
				echo No install file
			}

			cd $pwd
		}
	}
}

com = $1
shift

pkgs = $*

switch($com){
	case get
		get_handler
	case install
		install_handler
	case *
		usage
}

